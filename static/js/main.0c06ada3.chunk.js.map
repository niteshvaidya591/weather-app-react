{"version":3,"sources":["Climate.js","CurrentCondition.js","App.js","index.js"],"names":["Climate","props","info","id","map","i","j","date","avgtempC","avgtempF","maxtempC","maxtempF","mintempC","mintempF","sunHour","totalSnow_cm","uvIndex","CurrentCondition","FeelsLikeC","FeelsLikeF","cloudcover","humidity","observation_time","precipInches","precipMM","pressure","pressureInches","temp_C","temp_F","visibility","visibilityMiles","weatherCode","weatherDesc","value","src","weatherIconUrl","winddir16Point","winddirDegree","windspeedKmph","windspeedMiles","App","state","place","error","handleChange","bind","handleSubmit","callApi","e","this","setState","target","event","preventDefault","test","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","onSubmit","htmlFor","onChange","placeholder","type","length","request","query","className","console","log","current_condition","weather","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA4CeA,MA1Cf,SAAiBC,GACf,OACE,oCACiB,MAAdA,EAAMC,KAAe,0DAAmC,KAE1C,MAAdD,EAAMC,KAAe,wBAAOC,GAAG,iBAAV,UAEpB,kCACE,sCACA,4CACA,4CACA,4CACA,4CACA,4CACA,4CACA,0CACA,+CACA,6CAEF,gCACGF,EAAMC,KAAKE,KAAI,SAACC,EAAGC,GAAJ,OACd,+BACE,6BAAKD,EAAEE,OACP,6BAAKF,EAAEG,WACP,6BAAKH,EAAEI,WACP,6BAAKJ,EAAEK,WACP,6BAAKL,EAAEM,WACP,6BAAKN,EAAEO,WACP,6BAAKP,EAAEQ,WACP,6BAAKR,EAAES,UACP,6BAAKT,EAAEU,eACP,6BAAKV,EAAEW,YAVAV,WAeJ,SCCFW,MArCf,SAA0BhB,GACtB,OACI,8BACI,0BAASE,GAAG,0BAAZ,UACmB,MAAdF,EAAMC,KAAe,2DAAqC,KAC5C,MAAdD,EAAMC,KACDD,EAAMC,KAAKE,KAAI,SAACC,EAAGC,GAAJ,OACb,gCACI,gCAAK,gDAAsB,4BAAID,EAAEa,gBACjC,gCAAK,gDAAsB,4BAAIb,EAAEc,gBACjC,gCAAK,4CAAkB,4BAAId,EAAEe,gBAC7B,gCAAK,yCAAe,4BAAIf,EAAEgB,cAC1B,gCAAK,8CAAoB,4BAAIhB,EAAEiB,sBAC/B,gCAAK,8CAAoB,4BAAIjB,EAAEkB,kBAC/B,gCAAK,0CAAgB,4BAAIlB,EAAEmB,cAC3B,gCAAK,yCAAe,4BAAInB,EAAEoB,cAC1B,gCAAK,gDAAsB,4BAAIpB,EAAEqB,oBACjC,gCAAK,uCAAa,4BAAIrB,EAAEsB,YACxB,gCAAK,uCAAa,4BAAItB,EAAEuB,YACxB,gCAAK,yCAAe,4BAAIvB,EAAEW,aAC1B,gCAAK,2CAAiB,4BAAIX,EAAEwB,gBAC5B,gCAAK,iDAAuB,4BAAIxB,EAAEyB,qBAClC,gCAAK,6CAAmB,4BAAIzB,EAAE0B,iBAC9B,gCAAK,6CAAmB,4BAAI1B,EAAE2B,YAAY,GAAGC,WAC7C,8BAAK,qBAAKC,IAAK7B,EAAE8B,eAAe,GAAGF,UACnC,gCAAK,+CAAqB,4BAAI5B,EAAE+B,oBAChC,gCAAK,4CAAkB,4BAAI/B,EAAEgC,mBAC7B,gCAAK,gDAAsB,4BAAIhC,EAAEiC,mBACjC,gCAAK,iDAAuB,4BAAIjC,EAAEkC,sBArB5BjC,MAwBZ,WC8DPkC,E,kDAzFb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IACDwC,MAAQ,CAAEC,MAAO,YAAaxC,KAAM,GAAIyC,MAAO,IACpD,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBALE,E,qDAQnB,c,0BAGA,SAAaG,GACXC,KAAKC,SAAS,CAAER,MAAOM,EAAEG,OAAOlB,U,0BAGlC,SAAamB,GACXA,EAAMC,iBAEM,YAENC,KAAKL,KAAKR,MAAMC,OAClBO,KAAKF,UACLE,KAAKC,SAAS,CAAEP,MAAO,0BAA2BzC,KAAM,O,qBAG9D,WAAW,IAAD,OAEFqD,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAElB,MAAOO,KAAKR,MAAMC,SAE3CmB,MAAM,iDAAkDN,GACrDO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKf,SAAS,CAAEhD,KAAM+D,OACxChB,KAAKC,SAAS,CAAEP,MAAO,O,oBAEzB,WAAU,IAAD,kCACP,OACE,sBAAKxC,GAAG,aAAR,UACE,6CACA,uBAAM+D,SAAUjB,KAAKH,aAArB,UACE,uBAAOqB,QAAQ,gBAAf,6DAGA,uBACEhE,GAAG,gBACH8B,MAAOgB,KAAKR,MAAMC,MAClB0B,SAAUnB,KAAKL,aACfyB,YAAY,wBAEd,uBAAOC,KAAK,SAASrC,MAAM,wBAE7B,sBAAK9B,GAAG,cAAR,UAC8B,IAA3B8C,KAAKR,MAAMvC,KAAKqE,OACf,kEAEE,6CACGtB,KAAKR,MAAMvC,YADd,iBACG,EAAiB+D,YADpB,iBACG,EAAuBA,YAD1B,aACG,EAA6BO,QAAQpE,KAAI,SAACC,GACzC,OAAOA,EAAEoE,SAFb,UAQF,oBAAIC,UAAU,QAAd,SAAuBzB,KAAKR,MAAME,QAGnCgC,QAAQC,IAAR,UAAY3B,KAAKR,MAAMvC,YAAvB,iBAAY,EAAiB+D,YAA7B,aAAY,EAAuBA,MACpC,cAAC,EAAD,CACE/D,KACqD,MAAnD,UAAA+C,KAAKR,MAAMvC,YAAX,mBAAiB+D,YAAjB,mBAAuBA,YAAvB,eAA6BY,mBAA7B,UACI5B,KAAKR,MAAMvC,YADf,iBACI,EAAiB+D,YADrB,iBACI,EAAuBA,YAD3B,aACI,EAA6BY,kBAC7B,OAGR,cAAC,EAAD,CACE3E,KAC2C,MAAzC,UAAA+C,KAAKR,MAAMvC,YAAX,mBAAiB+D,YAAjB,mBAAuBA,YAAvB,eAA6Ba,SAA7B,UACI7B,KAAKR,MAAMvC,YADf,iBACI,EAAiB+D,YADrB,iBACI,EAAuBA,YAD3B,aACI,EAA6Ba,QAC7B,iB,GAjFAC,IAAMC,WCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,c","file":"static/js/main.0c06ada3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Climate(props) {\r\n  return (\r\n    <article>\r\n      {props.info != null ? <h3>Weather Calendar details</h3> :null}\r\n      \r\n      {props.info != null ? <table id=\"weatherClimate\">\r\n        \r\n        <thead>\r\n          <th>Date</th>\r\n          <th>Avg Temp C</th>\r\n          <th>Avg Temp F</th>\r\n          <th>Max Temp C</th>\r\n          <th>Max Temp F</th>\r\n          <th>Min Temp C</th>\r\n          <th>Min Temp F</th>\r\n          <th>Sun Hour</th>\r\n          <th>Total Snow cm</th>\r\n          <th>UV index</th>\r\n        </thead>\r\n        <tbody>\r\n          {props.info.map((i, j) => (\r\n            <tr key={j}>\r\n              <td>{i.date}</td>\r\n              <td>{i.avgtempC}</td>\r\n              <td>{i.avgtempF}</td>\r\n              <td>{i.maxtempC}</td>\r\n              <td>{i.maxtempF}</td>\r\n              <td>{i.mintempC}</td>\r\n              <td>{i.mintempF}</td>\r\n              <td>{i.sunHour}</td>\r\n              <td>{i.totalSnow_cm}</td>\r\n              <td>{i.uvIndex}</td>\r\n            </tr>\r\n          ))\r\n          }\r\n        </tbody>\r\n      </table> : null}\r\n\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Climate\r\n","import React from \"react\";\r\n\r\nfunction CurrentCondition(props) {\r\n    return (\r\n        <div>\r\n            <section id=\"weatherCurrentCondition\">\r\n                {props.info != null ? <h3>Current weather condition</h3> : null}\r\n                {props.info != null\r\n                    ? props.info.map((i, j) => (\r\n                        <div key={j}>\r\n                            <div><p>Feels like in C</p><p>{i.FeelsLikeC}</p></div>\r\n                            <div><p>Feels like in F</p><p>{i.FeelsLikeF}</p></div>\r\n                            <div><p>Cloud Cover</p><p>{i.cloudcover}</p></div>\r\n                            <div><p>Humidity</p><p>{i.humidity}</p></div>\r\n                            <div><p>Observed time</p><p>{i.observation_time}</p></div>\r\n                            <div><p>Precip Inches</p><p>{i.precipInches}</p></div>\r\n                            <div><p>Precip MM</p><p>{i.precipMM}</p></div>\r\n                            <div><p>Pressure</p><p>{i.pressure}</p></div>\r\n                            <div><p>Pressure Inches</p><p>{i.pressureInches}</p></div>\r\n                            <div><p>Temp C</p><p>{i.temp_C}</p></div>\r\n                            <div><p>Temp F</p><p>{i.temp_F}</p></div>\r\n                            <div><p>UV index</p><p>{i.uvIndex}</p></div>\r\n                            <div><p>Visibility</p><p>{i.visibility}</p></div>\r\n                            <div><p>Visibility miles</p><p>{i.visibilityMiles}</p></div>\r\n                            <div><p>Weather code</p><p>{i.weatherCode}</p></div>\r\n                            <div><p>Weather Type</p><p>{i.weatherDesc[0].value}</p></div>\r\n                            <div><img src={i.weatherIconUrl[0].value} /></div>\r\n                            <div><p>Wind direction</p><p>{i.winddir16Point}</p></div>\r\n                            <div><p>Wind degree</p><p>{i.winddirDegree}</p></div>\r\n                            <div><p>Wind speed KMPH</p><p>{i.windspeedKmph}</p></div>\r\n                            <div><p>Wind speed Miles</p><p>{i.windspeedMiles}</p></div>\r\n                        </div>\r\n                    ))\r\n                    : null}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentCondition;\r\n","import \"./App.css\";\nimport Climate from \"./Climate\";\nimport React from \"react\";\nimport CurrentCondition from \"./CurrentCondition\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { place: \"bangalore\", info: [], error: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.callApi = this.callApi.bind(this);\n  }\n\n  componentDidMount() {\n    //  this.handleSubmit();\n  }\n  handleChange(e) {\n    this.setState({ place: e.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    let regex = /[a-zA-Z]+/;\n\n    regex.test(this.state.place)\n      ? this.callApi()\n      : this.setState({ error: \"Invalid city name given\", info: [] });\n  }\n\n  callApi() {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ place: this.state.place }),\n    };\n    fetch(\"https://weather591.herokuapp.com/weather/place\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => this.setState({ info: data }));\n    this.setState({ error: \"\" });\n  }\n  render() {\n    return (\n      <div id=\"weatherApp\">\n        <h1>Weather App</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"weatherSearch\">\n            Enter the place name to get weather information\n          </label>\n          <input\n            id=\"weatherSearch\"\n            value={this.state.place}\n            onChange={this.handleChange}\n            placeholder=\"Enter the city name\"\n          />\n          <input type=\"submit\" value=\"Get Weather Info\" />\n        </form>\n        <div id=\"weatherInfo\">\n          {this.state.info.length !== 0 ? (\n            <h2>\n              You searched for the place &nbsp;\"\n              <strong>\n                {this.state.info?.data?.data?.request.map((i) => {\n                  return i.query;\n                })}\n                \"\n              </strong>\n            </h2>\n          ) : (\n            <h2 className=\"error\">{this.state.error}</h2>\n          )}\n\n          {console.log(this.state.info?.data?.data)}\n          <CurrentCondition\n            info={\n              this.state.info?.data?.data?.current_condition !== \"\"\n                ? this.state.info?.data?.data?.current_condition\n                : null\n            }\n          />\n          <Climate\n            info={\n              this.state.info?.data?.data?.weather !== \"\"\n                ? this.state.info?.data?.data?.weather\n                : null\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('weather')\n);\n\n"],"sourceRoot":""}